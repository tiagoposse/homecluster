---
global:
  tlsDisable: false

injector:
  enabled: true

  image:
    tag: 0.6.0
    repository: registry.tiagoposse.com/vault-agent

server:
  ingress:
    enabled: true
    labels: {}
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    hosts:
      - host: vault.tiagoposse.com
        paths:
          - /
    tls:
      - hosts:
          - vault.tiagoposse.com

  authDelegator:
    enabled: true

  annotations:
    autocert.step.sm/name: vault
    autocert.step.sm/duration: 4380h
    autocert.step.sm/sans: vault-internal.vault.svc,vault-0.vault-internal,vault-1.vault-internal,vault-2.vault-internal,vault-0.vault-internal.vault.svc,vault-1.vault-internal.vault.svc,vault-2.vault-internal.vault.svc,vault-internal.vault,vault-internal.vault.svc,vault.vault.svc,127.0.0.1

  extraEnvironmentVars:
    VAULT_CACERT: /var/run/autocert.step.sm/root.crt

  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: "{{ template "vault.name" . }}"
              app.kubernetes.io/instance: "{{ .Release.Name }}"
              component: server
          topologyKey: kubernetes.io/hostname

  service:
    enabled: true

  # Main vault storage
  dataStorage:
    enabled: true
    size: 3Gi

  auditStorage:
    enabled: false

  standalone:
    enabled: false

  # Run Vault in "HA" mode. Comment all of this if you want to run in standalone
  ha:
    enabled: true
    replicas: 3
  
    raft:
      enabled: true
      config: |
        ui = true
        cluster_addr = "https://POD_IP:8201"
        listener "tcp" {
          tls_disable = 0
          tls_cert_file = "/var/run/autocert.step.sm/site.crt"
          tls_key_file  = "/var/run/autocert.step.sm/site.key"
          tls_ca_cert_file = "/var/run/autocert.step.sm/root.crt"
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = true
          }
        }

        telemetry {
          prometheus_retention_time = "30s"
          disable_hostname = true
        }

        service_registration "kubernetes" {}

        storage "raft" {
          path    = "/vault/data"

          retry_join {
            leader_api_addr = "https://vault-0.vault-internal:8200"
            leader_ca_cert_file = "/var/run/autocert.step.sm/root.crt"
          }
          retry_join {
            leader_api_addr = "https://vault-1.vault-internal:8200"
            leader_ca_cert_file = "/var/run/autocert.step.sm/root.crt"
          }
          retry_join {
            leader_api_addr = "https://vault-2.vault-internal:8200"
            leader_ca_cert_file = "/var/run/autocert.step.sm/root.crt"
          }
        }

    disruptionBudget:
      enabled: true

ui:
  enabled: false
